import oracle as oc
import EigenPortfolio as ep
import bestStock as bs
import uniformBuySell as ubs
from utils import plotAndEval as pe
import TestingData as td
import numpy as np

def main():
        TestDate, TestReturn, stockPrice, TestTimeIndex, dateSelected = td.get_testing_data()
        c = 0.0001
        D = 10
        transCostParams = {
        'c': np.array([ [c] for _ in range(D) ]),
        'c0': c
        }

        '''
        baselineTransCostParams = np.zeros(D + 1) + c
        baselineGrowthRates = 1.0 + ep.baseline(stockPrice, TestTimeIndex, baselineTransCostParams)
        oracleGrowthRates = 1.0 + np.array(oc.solveOracle(stockPrice, 10000, transCostParams['c'], transCostParams['c0']))
        cnnGrowthRates = [1.0152560314163566, 0.91545996814966202, 1.0183228123933077, 0.9893954349681735, 0.96135960891842842, 1.0726567655801773, 1.1467432379722595, 1.027894476428628, 0.95478944852948189, 0.9720736388117075, 0.96634761989116669, 0.9944728440605104, 1.0326591990888119, 1.0256683565676212, 1.0240957401692867, 1.0100313564762473, 0.98063312284648418, 1.0134365111589432, 1.0552645698189735, 1.0029216944240034]
        rnnGrowthRates = [0.9971954005304724, 0.96993755176663399, 0.99630165658891201, 0.98046275228261948, 0.97584722377359867, 1.031975369900465, 1.0092480797320604, 1.0040765767917037, 1.0376634635031223, 0.97923833318054676, 0.99751235940493643, 0.99328339798375964, 1.0162526611238718, 1.0153080895543098, 1.064072772860527, 0.98770855646580458, 0.99992734854458831, 1.0090392688289285, 1.0159992519766092, 1.0231478232890368]
        bsGrowthRates = 1.0 + np.array(bs.bestStock(stockPrice))
        ubsGrowthRates = 1.0 + np.array(ubs.ubs(stockPrice))
        plotE = pe.plotEval(TestDate, 2016)
        plotE.addReturn(baselineGrowthRates, 'Baseline')
        plotE.addReturn(oracleGrowthRates, 'Oracle')
        plotE.addReturn(cnnGrowthRates, 'CNN')
        plotE.addReturn(rnnGrowthRates, 'RNN')
        plotE.eval()
        #plotE.addReturn(bsGrowthRates, 'BestStock')
        #plotE.addReturn(ubsGrowthRates,'Uniform Buy & Sell')
        plotE.generatePlot()
        '''
        # for rnn
        #N
        '''
        rnnTGSR = pe.plotEval(TestDate, 2016)
        label = ['N = 5', 'N = 7', 'N = 10', 'N = 12', 'N = 15']
        varyN = [[0.99806479224935174, 0.96977062523365021, 1.0050678779371083, 0.97788153029978275, 0.98364651016891003, 1.0249803084880114, 1.0321107693016529, 1.0071849399246275, 0.99704368226230145, 0.98231758363544941, 1.0056486018002033, 1.0074223699048162, 1.014820946380496, 1.0074363453313708, 1.0009133355342783, 0.99023584183305502, 0.9895999189466238, 1.0022383604664356, 1.0252971109002829, 1.021537221968174], [0.9971954005304724, 0.96993755176663399, 0.99630165658891201, 0.98046275228261948, 0.97584722377359867, 1.031975369900465, 1.0092480797320604, 1.0040765767917037, 1.0376634635031223, 0.97923833318054676, 0.99751235940493643, 0.99328339798375964, 1.0162526611238718, 1.0153080895543098, 1.064072772860527, 0.98770855646580458, 0.99992734854458831, 1.0090392688289285, 1.0159992519766092, 1.0231478232890368], [1.0064500677399337, 0.96324863284826279, 1.0060350741259754, 0.99382789246737957, 0.97734478861093521, 1.018985578790307, 1.025047117844224, 0.9994211511220783, 0.97530803084373474, 0.99150002002716064, 0.99593645194545388, 0.99311620090156794, 1.0169234275817871, 1.0162804313004017, 1.0727721974253654, 0.97133884951472282, 0.99782958230935037, 1.0065875095315278, 1.0035749056842178, 1.0227844379842281], [0.99502119794487953, 0.97836319729685783, 1.0004723218444269, 0.99278923962265253, 0.9810415543615818, 1.0033637941814959, 1.0320689454674721, 1.0049008005298674, 0.98782643023878336, 0.97984579391777515, 1.0035387077368796, 0.98060505837202072, 1.0107698673382401, 1.0178119409829378, 1.0047148559242487, 1.0021707671694458, 0.99065169878304005, 0.99747819104231894, 1.0147813120856881, 1.0073720295913517], [0.99881064065266401, 0.96198847889900208, 1.0023220744915307, 0.98908448405563831, 0.98462247848510742, 1.0431753322482109, 1.0202088095247746, 1.0077384389005601, 0.98924691509455442, 0.98039484210312366, 1.0016600196249783, 0.99054166674613953, 1.014723707921803, 1.0112839378416538, 1.0016626348951831, 0.98063062876462936, 0.99877941934391856, 1.0045165130868554, 1.0251252241432667, 1.0206941962242126]]
        for i in xrange(len(varyN)):
                rnnTGSR.addReturn(varyN[i], label[i])
        rnnTGSR.generatePlot()
        rnnTGSR.eval()
        '''
#HS

        label2 = ['HS = 5', 'HS = 7', 'HS = 10', 'HS = 12', 'HS = 15']
        rnnTGSR2 = pe.plotEval(TestDate, 2016)
        varyHS = [[1.0129247317090631, 0.95937595516443253, 1.0052500325255096, 0.9909678976982832, 0.9792784471064806, 1.0399397164583206, 1.0325390063226223, 1.0071068466641009, 0.98107793368399143, 0.98393856734037399, 0.99679841962642968, 0.99752818746492267, 1.0167227853089571, 1.01151242852211, 1.0216988138854504, 0.98314699344336987, 0.99462805921211839, 1.0056470306590199, 1.0131674371659756, 1.0141287306323647], [0.99662009789608419, 0.96803624555468559, 1.0074058128520846, 0.99127990752458572, 0.97557606734335423, 1.0245152562856674, 1.0318852439522743, 1.014999714680016, 0.99687380576506257, 0.99635570938698947, 0.98865456506609917, 0.97680531814694405, 1.0196725185960531, 1.0086060296744108, 1.0451333597302437, 1.0058662425726652, 0.99196216836571693, 0.99952391130500473, 1.021997170522809, 1.0183937475085258], [1.0032203407026827, 0.96701685711741447, 1.00243572704494, 0.98620783165097237, 0.97982766665518284, 1.0394303798675537, 1.0270752012729645, 1.0068003027699888, 0.98617271892726421, 0.98230322264134884, 0.99921091954456642, 0.99302620999515057, 1.0162050686776638, 1.0110409669578075, 1.0046817641705275, 0.98159333877265453, 0.9938675812445581, 1.005439989734441, 1.0142440823838115, 1.0182782560586929], [0.99755496717989445, 0.97818376496434212, 0.98243227228522301, 0.98597531393170357, 0.97707521729171276, 1.0359937325119972, 1.020660724490881, 1.0111564425751567, 1.0151400258764625, 0.97756539285182953, 0.99451735382899642, 0.9933923757635057, 1.017085237428546, 1.0114869447425008, 1.0436600968241692, 0.98978963308036327, 0.99363793665543199, 1.0105013167485595, 1.0204548686742783, 1.0201069340109825], [0.99738968885503709, 0.9703372810035944, 1.0012227084953338, 0.98037387430667877, 0.9777753408998251, 1.0246903784573078, 1.0303340647369623, 1.0036920686252415, 0.99542109295725822, 0.97792113572359085, 0.98952731490135193, 0.98844872135668993, 1.0117829814553261, 1.0148962074890733, 1.0057903816923499, 0.98194788582623005, 0.99962114027584903, 1.014446172863245, 1.0115604065358639, 1.0111079085618258]]
        for i in xrange(len(varyHS)):
                rnnTGSR2.addReturn(varyHS[i], label2[i])
        rnnTGSR2.generatePlot()
        rnnTGSR2.eval()
        




if __name__=='__main__':
    main()